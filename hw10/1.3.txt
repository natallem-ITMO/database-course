1.3 ExtendReservation
start transaction read write isolation level repeatable read;
-- Покажем, что аномалия "неповторяемого чтения" для нас крайне не желательна.
-- После проверки credentials, существования полета и существования забронированного 
-- данным пользователем билета, мы делаем update нужного билета, полагаясь, что 
-- пользователь еще все тот же и тип билета "booked".
-- Однако если в момент между проверкой существования билета и update произойдет, 
-- например
-- 1) отмена брони (кто-то удалит бронь), отмена полета или удаление места: тогда 
-- вернем пользователю true (будто обновление прошло успешно, хотя на самом деле 
-- update не выполнится ни для одной строки)
-- 2) покупка билета этим пользователем (тогда update time останется на покупки 
-- билета, а повторного бронирования, хотя билет считается выкупленным - нарушение 
-- корректности).
-- Как минимум эти случаи говорят, что условие повтряемого чтения необходимо.
-- Фантомная запись не важна, т.к. появление новой строки при условии повторяемого 
-- чтения говорит лишь о том, что те данные, которые мы однажды прочитали, останутся 
-- такими же до конца транзакции, а это требование, которое нужно в данной функции, 
-- ведь каждое следующее действие опирается на предыдущую проверку, которая останется 
-- удовлетворенной по причине RR isolation level)